---
- name: RUNC | Check runc binary exists
  stat:
    path: "{{ runc_bin_path }}/runc"
    checksum_algorithm: "{{ runc[runc_version].checksum_algorithm }}"
  register: runc_bin

- name: RUNC |(when use_downloader == TRUE)
  block:
    - name: RUNC | Creating default folder for components
      file:
        path: "{{ downloader_source_folder }}"
        state: directory
        mode: u+rwx
      run_once: true
      delegate_to: localhost

    - name: RUNC | Check that the runc file exists on the localhost
      stat:
        path: "{{ downloader_source_folder }}/{{ runc[runc_version].source_url | basename }}"
        checksum_algorithm: "{{ runc[runc_version].checksum_algorithm }}"
      register: downloader_distr
      delegate_to: localhost

    - name: RUNC | Download runc to localhost
      get_url:
        url: "{{ runc[runc_version].source_url }}"
        dest: "{{ downloader_source_folder }}"
        checksum: "{{ runc[runc_version].checksum_algorithm }}:{{ runc[runc_version].checksum }}"
      run_once: true
      delegate_to: localhost
      when: downloader_distr.stat.checksum|default() != runc[runc_version].checksum

    - name: RUNC | Copy from localhost to remote host
      copy:
        src: "{{ downloader_source_folder }}/{{ runc[runc_version].source_url | basename }}"
        dest: "{{ runc_bin_path }}/runc"
        owner: root
        group: root
        mode: u+rwx
  when:
    - use_downloader
    - runc_bin.stat.checksum|default() != runc[runc_version].checksum

- name: RUNC | Download etcd archive to host
  get_url:
    url: "{{ runc[runc_version].source_url }}"
    dest: "{{ runc_bin_path }}/runc"
    checksum: "{{ runc[runc_version].checksum_algorithm }}:{{ runc[runc_version].checksum }}"
    owner: root
    group: root
    mode: u+rwx
  when:
    - not use_downloader
    - runc_bin.stat.checksum|default() != runc[runc_version].checksum
